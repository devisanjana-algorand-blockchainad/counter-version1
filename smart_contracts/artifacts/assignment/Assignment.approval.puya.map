{
  "version": 3,
  "sources": [
    "../../assignment/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAIA;;;AAAA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;AAAA;AAAA;AAIK;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAKA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAKA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAnBL;;AAAA;;;;;;;;;AAAA;AAAA;AAIA;;;AAEe;;AAAuB;;AAAvB;AAAP;AACa;;AAAb;AAAA;AAAA;AAAA;AAAA;AAA4B;AAA5B;AAAA;AAAA;AAAA;;AAER;;;AAEe;;AAAuB;;AAAvB;AAAP;AACa;;AAAb;AAAA;AAAA;AAAA;AAAA;AAA4B;AAA5B;AAAA;AAAA;AAAA;;AAER;;;AAEe;;AAAuB;;AAAvB;AAAP;AACoB;;AAAb;AAAA;AAAA;AAAA;AAAP;AAER;;;AAEqB;;AAAb;AAA2B;AAA3B;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.assignment.contract.Assignment.approval_program",
      "params": {},
      "block": "smart_contracts.assignment.contract.Assignment.approval_program",
      "stack_in": [],
      "op": "intcblock 1 0"
    },
    "5": {
      "op": "bytecblock \"counter\""
    },
    "15": {
      "callsub": "smart_contracts.assignment.contract.Assignment.__puya_arc4_router__",
      "op": "callsub __puya_arc4_router__",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "18": {
      "op": "return",
      "stack_out": []
    },
    "19": {
      "subroutine": "smart_contracts.assignment.contract.Assignment.__puya_arc4_router__",
      "params": {},
      "block": "__puya_arc4_router__",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "22": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "24": {
      "op": "bz __puya_arc4_router___bare_routing@8",
      "stack_out": []
    },
    "27": {
      "op": "pushbytess 0x2fa47328 0x4b5bddfd 0x50ea81cb 0x30c6d58a // method \"increment()void\", method \"decrement()void\", method \"get()uint64\", method \"opt_in()void\""
    },
    "49": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(decrement()void)",
        "Method(get()uint64)",
        "Method(increment()void)",
        "Method(opt_in()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(increment()void)",
        "Method(decrement()void)",
        "Method(get()uint64)",
        "Method(opt_in()void)",
        "tmp%2#0"
      ]
    },
    "52": {
      "op": "match __puya_arc4_router___increment_route@2 __puya_arc4_router___decrement_route@3 __puya_arc4_router___get_route@4 __puya_arc4_router___opt_in_route@5",
      "stack_out": []
    },
    "62": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "63": {
      "retsub": true,
      "op": "retsub"
    },
    "64": {
      "block": "__puya_arc4_router___increment_route@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "66": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "67": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "68": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "70": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "71": {
      "callsub": "smart_contracts.assignment.contract.Assignment.increment",
      "op": "callsub increment"
    },
    "74": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "75": {
      "retsub": true,
      "op": "retsub"
    },
    "76": {
      "block": "__puya_arc4_router___decrement_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "78": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "79": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "80": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "82": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "83": {
      "callsub": "smart_contracts.assignment.contract.Assignment.decrement",
      "op": "callsub decrement"
    },
    "86": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "87": {
      "retsub": true,
      "op": "retsub"
    },
    "88": {
      "block": "__puya_arc4_router___get_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "90": {
      "op": "!",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "91": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "92": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "94": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "95": {
      "callsub": "smart_contracts.assignment.contract.Assignment.get",
      "op": "callsub get",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "98": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "99": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "105": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "106": {
      "op": "concat",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "107": {
      "op": "log",
      "stack_out": []
    },
    "108": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "109": {
      "retsub": true,
      "op": "retsub"
    },
    "110": {
      "block": "__puya_arc4_router___opt_in_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "112": {
      "op": "intc_0 // OptIn",
      "defined_out": [
        "OptIn",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "OptIn"
      ]
    },
    "113": {
      "op": "==",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "114": {
      "error": "OnCompletion is not OptIn",
      "op": "assert // OnCompletion is not OptIn",
      "stack_out": []
    },
    "115": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "117": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "118": {
      "callsub": "smart_contracts.assignment.contract.Assignment.opt_in",
      "op": "callsub opt_in"
    },
    "121": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "122": {
      "retsub": true,
      "op": "retsub"
    },
    "123": {
      "block": "__puya_arc4_router___bare_routing@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "125": {
      "op": "bnz __puya_arc4_router___after_if_else@12",
      "stack_out": []
    },
    "128": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "130": {
      "op": "!",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "131": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "132": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "133": {
      "retsub": true,
      "op": "retsub"
    },
    "134": {
      "block": "__puya_arc4_router___after_if_else@12",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "135": {
      "retsub": true,
      "op": "retsub"
    },
    "136": {
      "subroutine": "smart_contracts.assignment.contract.Assignment.increment",
      "params": {},
      "block": "increment",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "139": {
      "op": "txn Sender"
    },
    "141": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "143": {
      "op": "app_opted_in",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "144": {
      "error": "Must opt in to call",
      "op": "assert // Must opt in to call",
      "stack_out": []
    },
    "145": {
      "op": "txn Sender"
    },
    "147": {
      "op": "dup"
    },
    "148": {
      "op": "intc_1 // 0"
    },
    "149": {
      "op": "bytec_0 // \"counter\"",
      "defined_out": [
        "\"counter\"",
        "0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "0",
        "\"counter\""
      ]
    },
    "150": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "151": {
      "error": "check self.counter exists for account",
      "op": "assert // check self.counter exists for account",
      "stack_out": [
        "tmp%3#0",
        "maybe_value%0#0"
      ]
    },
    "152": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "153": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "new_state_value%0#0"
      ]
    },
    "154": {
      "op": "bytec_0 // \"counter\""
    },
    "155": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "\"counter\"",
        "new_state_value%0#0"
      ]
    },
    "156": {
      "op": "app_local_put",
      "stack_out": []
    },
    "157": {
      "retsub": true,
      "op": "retsub"
    },
    "158": {
      "subroutine": "smart_contracts.assignment.contract.Assignment.decrement",
      "params": {},
      "block": "decrement",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "161": {
      "op": "txn Sender"
    },
    "163": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "165": {
      "op": "app_opted_in",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "166": {
      "error": "Must opt in to call",
      "op": "assert // Must opt in to call",
      "stack_out": []
    },
    "167": {
      "op": "txn Sender"
    },
    "169": {
      "op": "dup"
    },
    "170": {
      "op": "intc_1 // 0"
    },
    "171": {
      "op": "bytec_0 // \"counter\"",
      "defined_out": [
        "\"counter\"",
        "0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "0",
        "\"counter\""
      ]
    },
    "172": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "173": {
      "error": "check self.counter exists for account",
      "op": "assert // check self.counter exists for account",
      "stack_out": [
        "tmp%3#0",
        "maybe_value%0#0"
      ]
    },
    "174": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "175": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "new_state_value%0#0"
      ]
    },
    "176": {
      "op": "bytec_0 // \"counter\""
    },
    "177": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "\"counter\"",
        "new_state_value%0#0"
      ]
    },
    "178": {
      "op": "app_local_put",
      "stack_out": []
    },
    "179": {
      "retsub": true,
      "op": "retsub"
    },
    "180": {
      "subroutine": "smart_contracts.assignment.contract.Assignment.get",
      "params": {},
      "block": "get",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "183": {
      "op": "txn Sender"
    },
    "185": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "187": {
      "op": "app_opted_in",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "188": {
      "error": "Must opt in to call",
      "op": "assert // Must opt in to call",
      "stack_out": []
    },
    "189": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "191": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0"
      ]
    },
    "192": {
      "op": "bytec_0 // \"counter\"",
      "defined_out": [
        "\"counter\"",
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0",
        "\"counter\""
      ]
    },
    "193": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "194": {
      "error": "check self.counter exists for account",
      "op": "assert // check self.counter exists for account",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "195": {
      "retsub": true,
      "op": "retsub"
    },
    "196": {
      "subroutine": "smart_contracts.assignment.contract.Assignment.opt_in",
      "params": {},
      "block": "opt_in",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "199": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "201": {
      "op": "bytec_0 // \"counter\"",
      "defined_out": [
        "\"counter\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"counter\""
      ]
    },
    "202": {
      "op": "intc_1 // 0",
      "defined_out": [
        "\"counter\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"counter\"",
        "0"
      ]
    },
    "203": {
      "op": "app_local_put",
      "stack_out": []
    },
    "204": {
      "retsub": true,
      "op": "retsub"
    }
  }
}